<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>leo的博客</title>
  <subtitle>一个折腾控写字的地方</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://leoatchina.github.io/"/>
  <updated>2017-02-15T04:55:30.830Z</updated>
  <id>http://leoatchina.github.io/</id>
  
  <author>
    <name>leoatchina</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>centos升级gcc</title>
    <link href="http://leoatchina.github.io/2017/02/15/update-centos-gcc-compile-myself/"/>
    <id>http://leoatchina.github.io/2017/02/15/update-centos-gcc-compile-myself/</id>
    <published>2017-02-15T01:43:18.000Z</published>
    <updated>2017-02-15T04:55:30.830Z</updated>
    
    <content type="html"><![CDATA[<p>我的生信小型机装的系统是centos6.6,在装vim的插件YouCompleteMe时，需要gcc升级到4.8以上版本。网上搜索了一番后，编译安装最新版。</p>
<ol>
<li><p>下载最新版gcc并解压</p>
<blockquote>
<p>wget -c <a href="http://ftp.gnu.org/gnu/gcc/gcc-6.3.0/gcc-6.3.0.tar.bz2" target="_blank" rel="external">http://ftp.gnu.org/gnu/gcc/gcc-6.3.0/gcc-6.3.0.tar.bz2</a><br>tar jxvf gcc-6.3.0.tar.bz2</p>
</blockquote>
</li>
<li><p>下载另外所需文件</p>
<blockquote>
<p>cd gcc-6.3.0<br>./contrib/download_prerequisites　</p>
</blockquote>
</li>
<li><p>建立一个目录供编译出的文件存放</p>
<blockquote>
<p>mkdir gcc-build-6.3.0<br>cd gcc-build-6.3.0</p>
</blockquote>
</li>
<li><p>生成Makefile文件,注意我把prefix设置成了 <strong>/usr</strong>,直接把gcc装到对应的目录，不需要ln -s了</p>
<blockquote>
<p>../configure -enable-checking=release -enable-languages=c,c++ -disable-multilib –prefix=/usr</p>
</blockquote>
</li>
<li><p>编译,j后面是核心数，我因为是小型服务器，一共8核16线程，所以就设置的比较大，一般设置成4</p>
<blockquote>
<p>make -j8  //我的cpu跑到了差不多满100%<br><img src="/2017/02/15/update-centos-gcc-compile-myself/aa67e42e4668d405cd430d0e656364ac.png" alt=""></p>
</blockquote>
</li>
<li><p>安装</p>
<blockquote>
<p>sudo make install  </p>
</blockquote>
</li>
<li><p>检查,如</p>
<blockquote>
<p>gcc –version<br>c++ –version<br>cc –version<br>whereis gcc<br>which gcc</p>
</blockquote>
</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;我的生信小型机装的系统是centos6.6,在装vim的插件YouCompleteMe时，需要gcc升级到4.8以上版本。网上搜索了一番后，编译安装最新版。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;下载最新版gcc并解压&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;wget -c &lt;a
    
    </summary>
    
      <category term="linux" scheme="http://leoatchina.github.io/categories/linux/"/>
    
    
      <category term="gcc" scheme="http://leoatchina.github.io/tags/gcc/"/>
    
      <category term="centos" scheme="http://leoatchina.github.io/tags/centos/"/>
    
      <category term="linux" scheme="http://leoatchina.github.io/tags/linux/"/>
    
      <category term="编译" scheme="http://leoatchina.github.io/tags/%E7%BC%96%E8%AF%91/"/>
    
      <category term="c++" scheme="http://leoatchina.github.io/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>python_thread_sync</title>
    <link href="http://leoatchina.github.io/2017/02/14/python-thread-sync/"/>
    <id>http://leoatchina.github.io/2017/02/14/python-thread-sync/</id>
    <published>2017-02-14T07:55:14.000Z</published>
    <updated>2017-02-16T02:20:26.885Z</updated>
    
    <content type="html"><![CDATA[<p>Python的代码的执行是由Python虚拟机（又名解释器主循环）进行控制的。Python在设计时就是这样考虑的，在主循环中同时只能有一个控制线程在执行，就像单核CPU系统中的多进程一样。内存中可以有许多程序，但是在任意给定时刻只能有一个程序在运行。同理，尽管Python解释器中可以运行多个线程，但是在任意给定时刻只有一个线程会被解释器执行。<br>对Python虚拟机的访问是由全局解释锁（GIL）控制的。这个锁就是用来保证同时只能有一个线程运行的。在多线程环境中，Python虚拟机将按下面所述的方式执行。</p>
<ol>
<li>设置GIL。</li>
<li>切换进一个线程去运行。</li>
<li>执行下面操作之一。<ul>
<li>指定数量的字节码指令</li>
<li>线程主动让出控制权</li>
</ul>
</li>
<li>把线程设置回睡眠状态</li>
<li>解锁GIL</li>
<li>重复上述步骤</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Python的代码的执行是由Python虚拟机（又名解释器主循环）进行控制的。Python在设计时就是这样考虑的，在主循环中同时只能有一个控制线程在执行，就像单核CPU系统中的多进程一样。内存中可以有许多程序，但是在任意给定时刻只能有一个程序在运行。同理，尽管Python解
    
    </summary>
    
      <category term="python" scheme="http://leoatchina.github.io/categories/python/"/>
    
    
      <category term="python" scheme="http://leoatchina.github.io/tags/python/"/>
    
      <category term="thread" scheme="http://leoatchina.github.io/tags/thread/"/>
    
  </entry>
  
  <entry>
    <title>sslocal+proxychains4解决阿里云vps访问github过慢问题</title>
    <link href="http://leoatchina.github.io/2017/02/14/sslocal-proxychains-aliyun-github/"/>
    <id>http://leoatchina.github.io/2017/02/14/sslocal-proxychains-aliyun-github/</id>
    <published>2017-02-14T06:58:08.494Z</published>
    <updated>2017-02-15T04:52:00.237Z</updated>
    
    <content type="html"><![CDATA[<p>阿里云从github clone一些软件后再编译安装 ，速度都很慢。<br>试过改host或者设置 git的proxy，效果都不好，后来用 sslocal+proxychains4解决问题。</p>
<p><strong>1. 安装pip</strong></p>
<blockquote>
<p>wget -c <a href="https://bootstrap.pypa.io/get-pip.py" target="_blank" rel="external">https://bootstrap.pypa.io/get-pip.py</a><br>python get-pip.py</p>
</blockquote>
<p><strong>2. 安装 sslocal</strong></p>
<blockquote>
<p>pip install shadowsocks</p>
</blockquote>
<p><strong>3. 配置sslocal</strong></p>
<blockquote>
<p>vim ~/sslocal.json<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  &quot;server&quot;:&quot;1.1.1.1&quot;,    #可以使用的ss服务器IP</div><div class="line">  &quot;server_port&quot;:1035,    #ss服务器端口</div><div class="line">  &quot;local_address&quot;: &quot;0.0.0.0&quot;, #本地ip 注意：不要使用127.0.0.1或192.168.1.100等ip</div><div class="line">  &quot;local_port&quot;:1080,#本地端口</div><div class="line">  &quot;password&quot;:&quot;password&quot;,#连接ss服务器密码</div><div class="line">  &quot;timeout&quot;:600,#等待超时</div><div class="line">  &quot;method&quot;:&quot;rc4-md5&quot;#加密方式</div></pre></td></tr></table></figure></p>
</blockquote>
<p><strong>4. 启动sslocal，并加入开机启动</strong></p>
<blockquote>
<p>nohup sslocal -c ~/sslocal .json &gt;/dev/null 2&gt;&amp;1 &amp;<br>echo “ nohup sslocal -c  ~/sslocal .json &gt;/dev/null 2&gt;&amp;1 &amp;”  &gt;/etc/rc.local</p>
</blockquote>
<p><strong>5. 编译安装最新版 proxychains4</strong></p>
<blockquote>
<p>wget -c <a href="https://github.com/rofl0r/proxychains-ng/releases/download/v4.11/proxychains-ng-5.11.tar.bz2o" target="_blank" rel="external">https://github.com/rofl0r/proxychains-ng/releases/download/v4.11/proxychains-ng-5.11.tar.bz2o</a><br>tar zxf proxychains-ng-4.11.tar.bz2<br>cd proxychains-ng-4.11<br>./configure &amp;&amp; make &amp;&amp; make install &amp;&amp; make install-config</p>
</blockquote>
<p><strong>6. 编辑proxychains4配置文件</strong></p>
<blockquote>
<p>vim /usr/local/etc/proxychains.conf<br>更改 <code>socks4 127.0.0.1 9050</code>为<code>socks5 127.0.0.1 1080</code></p>
</blockquote>
<p><strong>7. 测试下你的代理</strong></p>
<blockquote>
<p>proxychains4 curl <a href="https://api.ipify.org/?format=json" target="_blank" rel="external">https://api.ipify.org/?format=json</a></p>
</blockquote>
<p>如果配置正确，返回你的ss服务器的ip地址</p>
<p><strong>8. 用proxychain4+git下载</strong></p>
<blockquote>
<p>proxychains4 git clone <a href="https://github.com/xxxxx/xxxxx.git" target="_blank" rel="external">https://github.com/xxxxx/xxxxx.git</a></p>
</blockquote>
<p>下面是我的一个测试结果，速度从4k提升到了1.5m<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">[proxychains] DLL init: proxychains-ng 4.11</div><div class="line">[proxychains] Strict chain  ...  127.0.0.1:1080  ...  github.com:443  ...  OK</div><div class="line">[proxychains] DLL init: proxychains-ng 4.11</div><div class="line">[proxychains] Strict chain  ...  127.0.0.1:1080  ...  github.com:443  ...  OK</div><div class="line">remote: Counting objects: 120391, done.</div><div class="line">[proxychains] DLL init: proxychains-ng 4.11</div><div class="line">remote: Total 120391 (delta 0), reused 0 (delta 0), pack-reused 120390</div><div class="line">Receiving objects: 100% (120391/120391), 84.22 MiB | 1.51 MiB/s, done.</div><div class="line">Resolving deltas: 100% (81308/81308), done.</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;阿里云从github clone一些软件后再编译安装 ，速度都很慢。&lt;br&gt;试过改host或者设置 git的proxy，效果都不好，后来用 sslocal+proxychains4解决问题。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1. 安装pip&lt;/strong&gt;&lt;/p&gt;
&lt;blo
    
    </summary>
    
      <category term="翻墙" scheme="http://leoatchina.github.io/categories/%E7%BF%BB%E5%A2%99/"/>
    
    
      <category term="sslocal" scheme="http://leoatchina.github.io/tags/sslocal/"/>
    
      <category term="gfwlist" scheme="http://leoatchina.github.io/tags/gfwlist/"/>
    
      <category term="proxychains4" scheme="http://leoatchina.github.io/tags/proxychains4/"/>
    
      <category term="aliyun" scheme="http://leoatchina.github.io/tags/aliyun/"/>
    
      <category term="github" scheme="http://leoatchina.github.io/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>安装新版htslib、bcftools、samtools</title>
    <link href="http://leoatchina.github.io/2017/02/14/install_samtools_etc/"/>
    <id>http://leoatchina.github.io/2017/02/14/install_samtools_etc/</id>
    <published>2017-02-14T06:37:32.494Z</published>
    <updated>2017-02-14T07:07:27.959Z</updated>
    
    <content type="html"><![CDATA[<h5 id="官方网站和github上的INSTALL-README有问题，要按照下面的方法安装develop版本的"><a href="#官方网站和github上的INSTALL-README有问题，要按照下面的方法安装develop版本的" class="headerlink" title="官方网站和github上的INSTALL/README有问题，要按照下面的方法安装develop版本的"></a>官方网站和github上的INSTALL/README有问题，要按照下面的方法安装develop版本的</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">git clone --branch=develop git://github.com/samtools/htslib.git</div><div class="line">git clone --branch=develop git://github.com/samtools/bcftools.git</div><div class="line">git clone --branch=develop git://github.com/samtools/samtools.git</div><div class="line">cd bcftools &amp;&amp; make &amp;&amp; make install</div><div class="line">cd ../samtools &amp;&amp; make &amp;&amp; make install</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;官方网站和github上的INSTALL-README有问题，要按照下面的方法安装develop版本的&quot;&gt;&lt;a href=&quot;#官方网站和github上的INSTALL-README有问题，要按照下面的方法安装develop版本的&quot; class=&quot;headerlin
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>leoatchina的第一篇hexo博客</title>
    <link href="http://leoatchina.github.io/2017/01/29/hello-world/"/>
    <id>http://leoatchina.github.io/2017/01/29/hello-world/</id>
    <published>2017-01-29T01:58:44.881Z</published>
    <updated>2017-02-15T10:24:10.356Z</updated>
    
    <content type="html"><![CDATA[<p>leoatchina第一次用hexo进行博客写作，使用了<a href="https://github.com/iissnan/hexo-theme-next" target="_blank" rel="external">next</a>主题<br>leoatchina是用<strong>atom</strong>进行博客写作，可以在官方网站<a href="https://atom.io" target="_blank" rel="external">atom.io</a>上下载<br>之所以用这个软件，原因</p>
<ol>
<li>免费</li>
<li>配置可以用github进行同步</li>
<li>插件丰富,我主要用到的有<ul>
<li>markdown-preview-plus</li>
<li>markdown-writer </li>
<li>markdown-previwe-opener //自动打开markdown preview</li>
<li>markdown-scroll-sync //进行markdown写作时，写作区和预览区同步滚动</li>
<li>atom-hexo //hexo命令</li>
<li>vim-mode // 习惯vim的操作模式了</li>
<li><strong>markclip</strong>，//这个是利器 见下面</li>
</ul>
</li>
<li>写作时插入图片的方法<ol>
<li>首先，在<strong>主配置</strong>目录的_config.yml里，设置 <code>post_asset_folder: true</code></li>
<li>按正常的markdown语言进行写作</li>
<li>写作时正常截图，在安装了<strong>markclip</strong>之后，在文章里直接按<code>ctrl+v</code>,就可以在<code>source/_posts</code>目录下，建立一个和当前编辑的文件同名的文件夹，你的截图文件会自动放入这个文件夹，并在你markdown文件中插入这个图片的链接，如下<blockquote>
<p><img src="/2017/01/29/hello-world/aedc252b5e531dc5609dc30ce8b6f68e.png" alt=""></p>
</blockquote>
</li>
</ol>
</li>
<li>hexo clean | hexo g | hexo d，完成布置</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;leoatchina第一次用hexo进行博客写作，使用了&lt;a href=&quot;https://github.com/iissnan/hexo-theme-next&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;next&lt;/a&gt;主题&lt;br&gt;leoatchina是
    
    </summary>
    
    
  </entry>
  
</feed>
